package br.com.ideiasages.tests.validators;

import java.util.HashMap;
import java.util.Map;

import org.junit.Before;
import org.junit.Test;

import br.com.ideiasages.exception.ValidationException;
import br.com.ideiasages.validator.PasswordValidator;

public class PasswordValidatorTest {

	private PasswordValidator validator;
	private Map<String, Object> map;

	@Before
	public void setUp() {
		validator = new PasswordValidator();
		map = new HashMap<>();
	}

	@Test(expected = ValidationException.class)
	public void passwordIsNullOrEmpty() throws ValidationException {
		map.put("password", null);

		validator.validar(map);

		map.replace("password", "");

		validator.validar(map);

		map.replace("password", "");

		map.put("otherPassword", "");

		validator.validar(map);
	}

	@Test(expected = ValidationException.class)
	public void otherPasswordIsNullOrEmpty() throws ValidationException {
		map.put("otherPassword", null);

		validator.validar(map);

		map.replace("otherPassword", "");

		validator.validar(map);
	}

	@Test(expected = ValidationException.class)
	public void passwordKeysNotExist() throws ValidationException {
		map.put(null, "");

		validator.validar(map);

		map.replace("", "");

		validator.validar(map);
	}

	@Test(expected = ValidationException.class)
	public void invalidPasswordExceptions() throws ValidationException {
		map.put("password", 1L);

		validator.validar(map);

		map.put("password", false);

		validator.validar(map);

		map.put("password", 155.0);

		validator.validar(map);

		map.put("password", Byte.parseByte("155"));

		validator.validar(map);

		map.put("password", 'a');

		validator.validar(map);
	}

	@Test(expected = ValidationException.class)
	public void invalidPassword() throws ValidationException {
		map.put("password", "12345678");
		map.put("otherPassword", "123456789");

		validator.validar(map);

		map.replace("password", "12345678");
		map.replace("otherPassword", "123456789");

		validator.validar(map);
	}

	@Test(expected = ValidationException.class)
	public void exceededPasswordLength() throws ValidationException {
		String password = "123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678123456781234567812345678";
		String otherPassword

		map.put("password", password);
		map.put("otherPassword", otherPassword);

		validator.validar(map);
	}

}
